name: Deploy Frontend and Backend to Render and Create a New Release

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest
        outputs:
            frontend_url: ${{ steps.get_frontend_url.outputs.url }}  # Store Render URL
        steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Install Dependencies
          run: |
                npm install

        - name: Deploy Backend to Render
          run: |
                curl --request POST \
                        --url https://api.render.com/v1/services/${{secrets.RENDER_BACKEND_SERVICE_ID}}/deploys \
                        --header 'accept: application/json' \
                        --header 'authorization: Bearer ${{secrets.RENDER_API_KEY}}' \
                        --header 'content-type: application/json' \
                        --data '
                {
                    "clearCache": "clear"
                }
                '

        - name: Deploy Frontend to Render
          run: |
                curl --request POST \
                        --url https://api.render.com/v1/services/${{secrets.RENDER_FRONTEND_SERVICE_ID}}/deploys \
                        --header 'accept: application/json' \
                        --header 'authorization: Bearer ${{secrets.RENDER_API_KEY}}' \
                        --header 'content-type: application/json' \
                        --data '
                {
                    "clearCache": "clear"
                }
                '

        - name: Get Frontend Deployment URL
          id: get_frontend_url
          run: |
            FRONTEND_URL=$(curl --request GET \
                        --url https://api.render.com/v1/services/${{secrets.RENDER_FRONTEND_SERVICE_ID}} \
                        --header 'accept: application/json' \
                        --header 'authorization: Bearer ${{secrets.RENDER_API_KEY}}' \
                        | jq -r '.service.deploy.url')
            echo "Frontend deployed at: $FRONTEND_URL"
            echo "url=$FRONTEND_URL" >> $GITHUB_ENV

    release:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Generate Release Tag
          id: version
          run: |
            VERSION="v1.0.$(date +%s)"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "Generated Version: $VERSION"

        - name: Create GitHub Release
          uses: softprops/action-gh-release@v1
          with:
            token: ${{ secrets.GH_PAT }}
            tag_name: ${{ env.VERSION }}
            name: "Release ${{ env.VERSION }}"
            body: "🚀 New deployment is live!\n🌍 Deployed URL: [Visit Site](${{ needs.deploy.outputs.frontend_url }})"
            draft: false
            prerelease: false
